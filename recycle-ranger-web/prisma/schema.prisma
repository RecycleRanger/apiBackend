// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  classId       Int       @unique @default(autoincrement())
  accounts      Account[]
  sessions      Session[]
}

// model Teacher {
//   id            String    @id @default(cuid())
//   name          String?
//   email         String?   @unique
//   emailVerified DateTime?
//   image         String?
//   classId       Int       @unique @default(autoincrement())
//   accounts      Account[]
//   session       Session[]
//   students      Student[]
// }

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Student {
  id        Int             @id @default(autoincrement())
  name      String
  password  String
  score     Int
  // teacher   User @relation(fields: [classId], references: [classId])
  classId   Int
  wastTrack WasteTracking[]
}

model WasteTracking {
  userId     Int      @id
  student    Student  @relation(fields: [userId], references: [id])
  date       DateTime
  trashType  String
  trashScore Int
}
